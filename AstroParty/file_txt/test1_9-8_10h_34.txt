import pygame
from random import randint

class Player(pygame.sprite.Sprite):
    def __init__(self, groups):
        super().__init__(groups)
        self.image = pygame.image.load(r'D:\python\lesson1\assets\tau1.png').convert_alpha()
        self.rect = self.image.get_rect(center=(WINDOW_WIDTH / 2, WINDOW_HEIGHT / 2))
        self.direction = pygame.Vector2()
        self.speed = 300

        # Cooldown for shooting
        self.can_shoot = True
        self.laser_shoot_time = 0
        self.cooldown_duration = 200

    def fire_timer(self):
        if not self.can_shoot:
            current_time = pygame.time.get_ticks()
            if current_time - self.laser_shoot_time >= self.cooldown_duration:
                self.can_shoot = True

    def update(self, dt):
        keys = pygame.key.get_pressed()
        self.direction.x = int(keys[pygame.K_RIGHT]) - int(keys[pygame.K_LEFT])
        self.direction.y = int(keys[pygame.K_DOWN]) - int(keys[pygame.K_UP])
        self.direction = self.direction.normalize() if self.direction else self.direction
        self.rect.center += self.direction * self.speed * dt

        # Handle firing
        recent_keys = pygame.key.get_pressed()
        if recent_keys[pygame.K_SPACE] and self.can_shoot:
            Fire(fire_surf, self.rect.midtop, all_sprites)  # Đảm bảo sử dụng fire_surf
            self.can_shoot = False
            self.laser_shoot_time = pygame.time.get_ticks()
        self.fire_timer()

class Fire(pygame.sprite.Sprite):
    def __init__(self, surf, pos, groups):
        super().__init__(groups)
        self.image = fire_surf  # Đảm bảo sử dụng fire_surf làm hình ảnh cho lửa
        self.rect = self.image.get_rect(midbottom=pos)
    def update(self, dt):
        self.rect.centery -= 400 * dt
        if self.rect.bottom < 0:
            self.kill()

# General setup
pygame.init()
WINDOW_WIDTH, WINDOW_HEIGHT = 1080, 600
display_surface = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT))
pygame.display.set_caption('Space shooter')
running = True
clock = pygame.time.Clock()

# Tạo nhóm sprite
all_sprites = pygame.sprite.Group()

# Tạo đối tượng người chơi
player = Player(all_sprites)

# Load hình ảnh thiên thạch và lửa
meteor_surf = pygame.image.load(r'D:\python\lesson1\assets\da1.png').convert_alpha()
meteor_rect = meteor_surf.get_rect(center=(WINDOW_WIDTH / 2, WINDOW_HEIGHT / 2))

fire_surf = pygame.image.load(r'D:\python\lesson1\assets\fire1-7.png').convert_alpha()  # Đảm bảo fire_surf được sử dụng
clock = pygame.time.Clock()
# Vòng lặp chính của trò chơi
while running:
    dt = clock.tick(30) / 1000
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False

    # Cập nhật tất cả các sprite
    all_sprites.update(dt)

    # Vẽ lên màn hình
    display_surface.fill('darkgray')
    display_surface.blit(meteor_surf, meteor_rect)
    all_sprites.draw(display_surface)
    pygame.display.update()

pygame.quit()
