import pygame
from os.path import join

from random import randint
#general setup
pygame.init()
WINDOW_WIDTH, WINDOW_HEIGHT = 1280,720
display_surface = pygame.display.set_mode((WINDOW_WIDTH, WINDOW_HEIGHT))
pygame.display.set_caption('Space shooter')
running = True
clock = pygame.time.Clock()

#plain surface
surf = pygame.Surface((100,200))
surf.fill('orange')
x = 100

#importing an image

player_surf = pygame.image.load(r'D:\python\lesson1\assets\tau1.png').convert_alpha()
player_rect = player_surf.get_rect(center = (WINDOW_WIDTH /2, WINDOW_HEIGHT /2))

# di chuyển nhờ xung quanh vecto 
player_direction = pygame.math.Vector2()
player_speed = 300

meteor_surf = pygame.image.load(r'D:\python\lesson1\assets\da1.png').convert_alpha()
meteor_rect = meteor_surf.get_rect(center = (WINDOW_WIDTH /2, WINDOW_HEIGHT /2))

fire_surf = pygame.image.load(r'D:\python\lesson1\assets\fire1-7.png').convert_alpha()
fire_rect = fire_surf.get_rect(bottomleft = (20, WINDOW_HEIGHT -20))

#player_x_float = player_rect.left
while running:
    dt = clock.tick(30) /1000
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            running = False
        #if event.type == pygame.KEYDOWN:
            #print(event.key)
        #if event.type == pygame.MOUSEMOTION:
            #player_rect.center = event.pos  # má bay di chuyển theo chuột
    
    #input
    #print(pygame.mouse.get_pressed())
    #di chuyển lên xuống trái phải....
    keys = pygame.key.get_pressed()
    player_direction.x = int(keys[pygame.K_RIGHT]) - int(keys[pygame.K_LEFT])
    player_direction.y = int(keys[pygame.K_DOWN]) - int(keys[pygame.K_UP])

    player_direction = player_direction.normalize() if player_direction else player_direction
    

    player_rect.center += player_direction * player_speed * dt

    #draw the game
    display_surface.fill('darkgray')
    
    display_surface.blit(meteor_surf,meteor_rect)
    display_surface.blit(fire_surf,fire_rect)
    # player movement

    #if player_rect.bottom >= WINDOW_HEIGHT or player_rect.top <= 0:
        #player_direction.y *= -1
    #if player_rect.right >= WINDOW_WIDTH or player_rect.left <= 0:
        #player_direction.x *= -1
    #player_rect.center += player_direction * player_speed
    #player_rect.x += player_direction * 1
    #if player_rect.right >  WINDOW_WIDTH or player_rect.left < 0:
        #player_direction *= -1 
        #player_x_float += 0.2
        #player_rect.left = int(player_x_float)
    display_surface.blit(player_surf, player_rect)
    pygame.display.update()
pygame.quit()

