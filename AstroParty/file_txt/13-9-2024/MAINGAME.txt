from settings import *
from player0 import Player0
from sprites import *
from player1 import Player1
from Fire import Fire

class Game:


    def __init__(self):
         # Initialize Pygame và hệ thống âm thanh
        pygame.init()  # Khởi tạo Pygame
        pygame.mixer.init()  # Khởi tạo hệ thống âm thanh
        # Setup
        self.display_surface = pygame.display.set_mode((WINDOW_WIDTH,WINDOW_HEIGHT))
        pygame.display.set_caption('Astro Party')
        icon = pygame.image.load(r'D:\python\lesson1\assets\11.png')
        pygame.display.set_icon(icon)
        self.clock = pygame.time.Clock()
        self.running = True

        # thêm background cho game 
        self.bg = pygame.image.load(r'D:\python\lesson1\assets\12_1.jpg')
        self.bg = pygame.transform.scale2x(self.bg)
        self.bg_x = 0
        self.bg_menu = pygame.image.load(r'D:\python\lesson1\assets\12_1.jpg')
        self.bg_menu = pygame.transform.scale2x(self.bg_menu)
        self.bg_menu_x = 0

        # Groups
        self.all_sprites = pygame.sprite.Group()
        self.collision_sprites = pygame.sprite.Group()
        
        fire = Fire(sprite_images=sprite_images, pos=(100 / 2, 600 / 2), groups=self.all_sprites)
        fire2 = Fire(sprite_images=sprite_images, pos=(100 / 2, 600 / 2), groups=self.all_sprites)

        # Sprites
        self.player0 = Player0(self.all_sprites,self.collision_sprites)
        self.player1 = Player1(fire, fire2, self.all_sprites,self.collision_sprites)
    
    # tạo âm thanh menu chờ
        pygame.mixer.music.load(r'D:\python\lesson1\sound\menu1.wav')      
    # màn hình menu 
        self.state = 'menu'
    # nhạc cho màn hình menu 
        self.music_playing = False 
    def main_menu(self):
        if not self.music_playing: # nếu nhạc chưa bật
            pygame.mixer.music.play(-1) # thêm tham số -1 để lặp lại nhạc
            self.music_playing = True
        self.bg_menu_x -= 0.5
        self.display_surface.blit(self.bg_menu,(self.bg_menu_x, -650))
        self.display_surface.blit(self.bg_menu,(self.bg_menu_x + 3000, 650)) # lặp lại hình nền menu

        if self.bg_menu_x <= - 3000:
            self.bg_menu_x = 0
        self.text_menu = font_titles.render("Astro Party", True,(255,165,0))
        self.display_surface.blit(self.text_menu, (200, 100))

        # Lấy thời gian hiện tại
        self.current_time = pygame.time.get_ticks()

        # Cứ mỗi 500ms (0.5 giây), chữ sẽ bật hoặc tắt
        if (self.current_time // 500) % 2 == 0:
            text = font_start.render("Press 'SPACE' to Start", True,(255,255,0))
            self.display_surface.blit(text, (230, 600))

        # đưa logo vào giữa màn hình
        self.plant_menu = pygame.image.load(r'D:\python\lesson1\assets\14_5.png')
        self.plant_menu = pygame.transform.scale2x(self.plant_menu)
        self.display_surface.blit(self.plant_menu, (250, 200))



        

        


    def main_play(self):
        # delta time
        dt = self.clock.tick(60) / 1000
        # di chuyển nền 
        self.bg_x -= 0.3
        self.display_surface.blit(self.bg, (self.bg_x, -300))  
        self.display_surface.blit(self.bg, (self.bg_x + 3000, -300))  # Lặp lại hình nền
        
        if self.bg_x <= -3000:
            self.bg_x = 0
        # Giả sử self.all_sprites là một nhóm chứa tất cả các sprite
        CollisionSprite((260, 205), (40, 80), (self.all_sprites,self.collision_sprites))
        CollisionSprite((240, 225), (80, 40), (self.all_sprites,self.collision_sprites))

        CollisionSprite((540, 205), (40, 80), (self.all_sprites,self.collision_sprites))
        CollisionSprite((560, 225), (80, 40), (self.all_sprites,self.collision_sprites))

        CollisionSprite((260, 475), (40, 80), (self.all_sprites,self.collision_sprites))
        CollisionSprite((240, 455), (80, 40), (self.all_sprites,self.collision_sprites))

        CollisionSprite((540, 475), (40, 80), (self.all_sprites,self.collision_sprites))
        CollisionSprite((560, 455), (80, 40), (self.all_sprites,self.collision_sprites))

        # vẽ hình chữ nhật ở trên cùng chính giữa 
        CollisionSprite((400,40),(40,80), (self.all_sprites,self.collision_sprites))

        # vẽ hình chữ nhật ở dưới cùng chính giữa
        CollisionSprite((400,660),(40,80), (self.all_sprites,self.collision_sprites))
        
        #vẽ hình chữ nhật ở bên phải chính giữa
        CollisionSprite((760,330),(80,40), (self.all_sprites,self.collision_sprites))

        #vẽ hình chữ nhật ở bên trái chính giữa
        CollisionSprite((40,330),(80,40), (self.all_sprites,self.collision_sprites))

        # Vẽ các đường màu đỏ sát viền cửa sổ trò chơi
        pygame.draw.line(self.display_surface, (255, 0, 0), (0, 0), (WINDOW_WIDTH, 0), 10)  # Đường trên
        pygame.draw.line(self.display_surface, (255, 0, 0), (0, 0), (0, WINDOW_HEIGHT), 10)  # Đường trái
        pygame.draw.line(self.display_surface, (255, 0, 0), (0, WINDOW_HEIGHT), (WINDOW_WIDTH, WINDOW_HEIGHT), 10)  # Đường dưới
        pygame.draw.line(self.display_surface, (255, 0, 0), (WINDOW_WIDTH, 0), (WINDOW_WIDTH, WINDOW_HEIGHT), 10)  # Đường phải

        #update
        for sprite in self.all_sprites:
            if isinstance(sprite, (CollisionSprite,Fire)):
                sprite.update()
            else:
                sprite.update(dt)
        #self.all_sprites.update(dt)
        # draw
        #self.display_surface.fill('black')
        self.all_sprites.draw(self.display_surface)
        
# hình như màn hình bị lệch 
    def run(self):
        while self.running:
            #event loop
            for event in pygame.event.get():
                if event.type == pygame.QUIT:
                    self.running = False
                if event.type == pygame.KEYDOWN:
                    if event.key == pygame.K_SPACE and self.state == 'menu':
                        pygame.mixer.music.stop()  # Dừng nhạc khi vào chơi game
                        self.state = 'playing'
            
            if self.state == "menu":
                self.main_menu()
            elif self.state == "playing":
                self.main_play()   
            

            pygame.display.update()
        pygame.quit()

if __name__ == "__main__":
    game = Game()
    game.run()